#!/usr/bin/env bash

set -e
set -o pipefail

if [ -z "$1" ]; then
    echo "Usage: package_ext EXT API..."
    exit 1
fi

indent() {
    c='s/^/       /'
    case $(uname) in
        Darwin) sed -l "$c";;
        *)      sed -u "$c";;
    esac
}

build_ext() {
    local ext_name="$1"
    local php_series="$2"
    local zend_api_version=${PHP_MODULE_API_VERSIONS["$php_series"]}
    if [ -z "$zend_api_version" ] ; then
      echo "No compatible zend API found for $php_series"
      return
    fi

    tempdir=$(mktmpdir php${ext_name})
    tempbuilddir=$(mktmpdir php-build${ext_name})
    cd $tempdir

    local php_version=$(\
        echo "$php_versions" \
        | grep "^${php_series}.*$" | sort -r | head -n1)

    echo "-----> Building $ext_name for PHP module API version ${zend_api_version} using PHP ${php_version}"

    local ext_dir="lib/php/extensions/no-debug-non-zts-${zend_api_version}"
    local php_package="${S3_URL}/package/php-${php_version}.tgz"
    local php_md5="${S3_URL}/package/php-${php_version}.md5"

    cp "$basedir/ext/${ext_name}" "$tempdir/build.sh"

    mkdir -p /app/vendor/php
    curl -L "$php_md5" > /tmp/php-${php_version}.md5
    if [ -e "/tmp/php-${php_version}.tgz" ] ; then
      remote_php_md5=$(cat "/tmp/php-${php_version}.md5")
      local_php_md5=$(md5 "/tmp/php-${php_version}.tgz")

      if [ "$local_php_md5" != "$remote_php_md5" ] ; then
        curl -L "$php_package" > /tmp/php-${php_version}.tgz
      else
        echo "/tmp/php-${php_version}.tgz exists, skip downloading"
      fi
    else
      curl -L "$php_package" > /tmp/php-${php_version}.tgz
    fi

    tar -xzv -C /app/vendor/php -f /tmp/php-${php_version}.tgz

    mkdir -p "$tempbuilddir/$ext_dir" \
      && mkdir -p "$tempbuilddir/etc/conf.d" \
      && PREFIX="$tempbuilddir" EXT_DIR="$tempbuilddir/$ext_dir" ./build.sh

    mkdir -p package/ext/${zend_api_version}
    pushd $tempbuilddir > /dev/null
    tar zcvf $tempdir/package/ext/${zend_api_version}/php-${ext_name}.tgz .
    popd

    s3_upload package/ext/${zend_api_version}/php-${ext_name}.tgz "package/ext/${zend_api_version}"
    "$basedir/package-checksum" "ext/${zend_api_version}/php-${ext_name}"
}

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "$basedir/../conf/buildpack.conf"
source "$basedir/utils"
source "$basedir/s3"

export PATH=${basedir}/../vendor/bin:$PATH

php_versions=$(curl --silent "${S3_URL}/manifest.php")

ext_name="$1"
shift
php_api="$@"

if [ ! -f "$basedir/ext/$ext_name" ]; then
    echo "No build manifest found for '$ext_name'" >&2
    exit 1
fi

echo "-----> Building $ext_name for PHP versions [$php_api]"

for api in $php_api; do
    build_ext "$ext_name" "$api"
done
